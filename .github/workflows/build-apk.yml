name: Build Android APK

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
          
        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
              node-version: '18'
              
        - name: Install Cordova CLI
          run: npm install -g cordova@11.0.0
          
        - name: Setup Java
          uses: actions/setup-java@v4
          with:
              distribution: 'temurin'
              java-version: '17'
              
        - name: Setup Android SDK manually
          run: |
              # 手动设置Android SDK环境变量
              export ANDROID_HOME="$HOME/android-sdk"
              export ANDROID_SDK_ROOT="$HOME/android-sdk"
              
              # 创建Android SDK目录
              mkdir -p $ANDROID_HOME
              
              # 下载Android SDK命令行工具
              wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
              unzip -q commandlinetools-linux-8512546_latest.zip
              
              # 创建正确的目录结构
              mkdir -p $ANDROID_HOME/cmdline-tools
              mv cmdline-tools $ANDROID_HOME/cmdline-tools/latest
              
              # 设置环境变量
              echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
              echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
              echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
              
        - name: Install Android SDK components
          run: |
              export ANDROID_HOME="$HOME/android-sdk"
              export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
              
              # 检查sdkmanager是否存在
              ls -la $ANDROID_HOME/cmdline-tools/latest/bin/
              
              # 接受许可证
              yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
              
              # 安装必要的SDK组件
              $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-32" "build-tools;32.0.0" "platform-tools"
              
        - name: Setup Android environment
          run: |
              echo "ANDROID_HOME=$ANDROID_HOME"
              echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
              echo "JAVA_HOME=$JAVA_HOME"
              
        - name: Force Gradle version
          run: |
              # 强制下载并使用Gradle 7.6.1
              wget https://services.gradle.org/distributions/gradle-7.6.1-bin.zip
              unzip -q gradle-7.6.1-bin.zip
              export PATH="$PWD/gradle-7.6.1/bin:$PATH"
              echo "GRADLE_HOME=$PWD/gradle-7.6.1" >> $GITHUB_ENV
              echo "$PWD/gradle-7.6.1/bin" >> $GITHUB_PATH
              gradle --version
              
        - name: Initialize Cordova project
          run: |
              cordova create temp-project com.thecodexwalker.game "The Codex Walker"
              cp -r temp-project/* .
              cp -r temp-project/.* . 2>/dev/null || true
              rm -rf temp-project
              
        - name: Add Android platform
          run: |
              # 检查并清理现有平台
              if [ -d "platforms/android" ]; then
                  echo "Removing existing Android platform..."
                  cordova platform remove android
              fi
              # 添加Android平台（降级到11.0.0）
              cordova platform add android@11.0.0
              
        - name: Configure Gradle compatibility
          run: |
              # 创建gradle.properties文件（移除已弃用的选项）
              cat > platforms/android/gradle.properties << EOF
              org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
              android.useAndroidX=true
              android.enableJetifier=true
              android.enableR8.fullMode=false
              android.enableR8=true
              org.gradle.parallel=true
              org.gradle.caching=true
              org.gradle.configureondemand=true
              EOF
              
              # 创建gradle-wrapper.properties文件
              mkdir -p platforms/android/gradle/wrapper
              cat > platforms/android/gradle/wrapper/gradle-wrapper.properties << EOF
              distributionBase=GRADLE_USER_HOME
              distributionPath=wrapper/dists
              distributionUrl=https\://services.gradle.org/distributions/gradle-7.6.1-bin.zip
              zipStoreBase=GRADLE_USER_HOME
              zipStorePath=wrapper/dists
              EOF
              
              # 创建build.gradle文件覆盖
              cat > platforms/android/build.gradle << EOF
              buildscript {
                  repositories {
                      google()
                      mavenCentral()
                  }
                  dependencies {
                      classpath 'com.android.tools.build:gradle:7.4.2'
                  }
              }
              
              allprojects {
                  repositories {
                      google()
                      mavenCentral()
                  }
              }
              EOF
              
              # 强制使用我们的Gradle版本
              echo '#!/bin/bash' > platforms/android/gradlew
              echo 'export GRADLE_HOME="$GITHUB_WORKSPACE/gradle-7.6.1"' >> platforms/android/gradlew
              echo 'export PATH="$GITHUB_WORKSPACE/gradle-7.6.1/bin:$PATH"' >> platforms/android/gradlew
              echo 'exec "$GITHUB_WORKSPACE/gradle-7.6.1/bin/gradle" "$@"' >> platforms/android/gradlew
              chmod +x platforms/android/gradlew
              
        - name: Install dependencies
          run: npm install
          
        - name: Add Cordova plugins
          run: |
              cordova plugin add cordova-plugin-whitelist@1.3.4
              cordova plugin add cordova-plugin-file@6.0.2
              cordova plugin add cordova-plugin-media@5.0.1
              cordova plugin add cordova-plugin-splashscreen@6.0.0
              cordova plugin add cordova-plugin-statusbar@3.0.0
              cordova plugin add cordova-plugin-inappbrowser@5.0.0
              
        - name: Build Android APK
          run: |
              export GRADLE_HOME="$GITHUB_WORKSPACE/gradle-7.6.1"
              export PATH="$GITHUB_WORKSPACE/gradle-7.6.1/bin:$PATH"
              cordova build android --verbose
              
        - name: Upload APK artifact
          uses: actions/upload-artifact@v4
          with:
              name: thecodexwalker-apk
              path: platforms/android/app/build/outputs/apk/debug/app-debug.apk
              
        - name: Build Release APK
          run: |
              export GRADLE_HOME="$GITHUB_WORKSPACE/gradle-7.6.1"
              export PATH="$GITHUB_WORKSPACE/gradle-7.6.1/bin:$PATH"
              cordova build android --release --verbose
              keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=Android Debug,O=Android,C=US"
              jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore -storepass android -keypass android app-release-unsigned.apk alias_name
              zipalign -v 4 app-release-unsigned.apk thecodexwalker-release.apk
              
        - name: Upload Release APK
          uses: actions/upload-artifact@v4
          with:
              name: thecodexwalker-release-apk
              path: thecodexwalker-release.apk
